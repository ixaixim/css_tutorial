@import url("https://fonts.googleapis.com/css?family=Roboto&display=swap");

body {
   font-size: 2rem;
   font-family: "Roboto", sans-serif;
}

/* *********************************** */
/* Block level vs inline level elements */
/* *********************************** */

/* block level elements have a default width the 100% of what space is available horizontally */
/* block level elements stack up vertically. */
/* main {
   background-color: aqua;
   width: 50%;
} */
p {
   background-color: lightgray;
   /* margin: 100px 50px; */
   /* adds 100px margin to top and bottom and 50px to left and right */
} 

/* The code is a CSS rule that sets the display property of an element to inline-block. This means that the element will be displayed as an inline-level block container, which allows other elements to be displayed on the same line as it, while also allowing for the element to have a width and height specified. */
/*  Inline level elements do not stack up on each other. They stay in the same line of the current block element.
They also do not take the whole space that is available to the block. */
.opposite {
   display: inline-block;
   background-color: #333;
   color: whitesmoke;
   margin-top: 100px;
   height: 200px;
   padding: 4rem;
}

/* *********************************** */
/* List items block level elements */
/* *********************************** */
/* generic style */
ul {
   margin: 0;
   padding: 0;
   box-sizing: border-box;
   
}

/* specific style */
ul {
   /* display: none; */
   /* removes visibility of element */
   list-style-type: none;
   padding: 0.5rem;
   text-align: right;
   background-color: #000;
   margin: 0;

}

li {
   display: inline-block;
   margin-inline: 0.5rem;
}

/* anchor tag */
li a {
   color: #fff;
   text-decoration: none;
}

/* pseudo classes */
li a:hover, li a:focus {
   text-decoration: underline;
}
